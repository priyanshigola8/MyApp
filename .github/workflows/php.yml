name: PHP

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8'
    
    - name: Change directory
      run: cd php

    - name: Install dependencies
      run: |
        php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
        php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
        php composer-setup.php
        php -r "unlink('composer-setup.php');"
  
  phplint:
    runs-on: ubuntu-latest
    name: PHP Lint
    steps:
    - uses: actions/checkout@v2
    - id: PHP-Lint
      uses: J3-Tech/PHP-Lint-Action@v0.0.5
      with:
        path: .
        exclude: vendor
        
    # - name: Install phplangci-lint
    #   run: composer require --dev phplang/phplangci-lint

    # - name: Lint PHP files
    #   run: vendor/bin/phpcs --standard=PSR12 .

    - name: Install PHPUnit
      run: composer require --dev phpunit/phpunit

    - name: Run PHPUnit tests
      # uses: php-actions/phpunit@v3
      run: vendor/bin/phpunit php/

    # - name: Check code coverage
    #   run: vendor/bin/phpunit --coverage-text --coverage-clover=coverage.xml && bash <(curl -s https://codecov.io/bash)

    # - name: Fail if coding standards or tests are not met
    #   run: |
    #     if [ $? -ne 0 ]; then
    #       echo "Tests or coding standards check failed. Exiting."
    #       exit 1
    #     fi      
