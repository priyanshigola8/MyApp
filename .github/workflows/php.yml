name: PHP

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0'

    # - name: Clone repository
    #   run: git clone https://github.com/priyanshigola8/MyApp.git
    # - name: Install Composer
    #   run: |
    #     php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    #     php -r "if (hash_file('sha384', 'composer-setup.php') === 'c3d752b0f12e3e7b751b36f5f99aad72a1d65939534bcd1501f078bd3ad070bcd06179dfeb07f7e9aeb6cb5c48d077ef') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); exit(1); } echo PHP_EOL;"
    #     php composer-setup.php --install-dir=/usr/local/bin --filename=composer
    #     php -r "unlink('composer-setup.php');"
    - name: Change directory
      run: cd php
      
    # - name: Validate composer.json and composer.lock
    #   run: composer validate --strict 
      
    # - name: Install dependencies
    #   run: composer install --prefer-dist --no-progress 
    - name: Install dependencies
      uses: php-actions/composer@v6
      env:
        COMPOSER: "composer.json"
      with:
        command: composer install
        args: --prefer-dist --no-progress
  
    # - name: Cache Composer packages
    #   id: composer-cache
    #   uses: actions/cache@v3
    #   with:
    #     path: vendor
    #     key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
    #     restore-keys: |
    #       ${{ runner.os }}-php-

    # - name: Install dependencies
    #   run: composer install --prefer-dist --no-progress --no-suggest

    - name: Lint PHP files
      run: vendor/bin/phpcs --standard=PSR12 .

    - name: Run PHPUnit tests
      run: vendor/bin/phpunit

    # - name: Check code coverage
    #   run: vendor/bin/phpunit --coverage-text --coverage-clover=coverage.xml && bash <(curl -s https://codecov.io/bash)

    # - name: Fail if coding standards or tests are not met
    #   run: |
    #     if [ $? -ne 0 ]; then
    #       echo "Tests or coding standards check failed. Exiting."
    #       exit 1
    #     fi      
